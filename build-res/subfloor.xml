<!--===========================================================================
Copyright (c) 2008-2009, Pentaho Engineering Team
All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Pentaho Corporation nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY Pentaho Engineering Team ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
============================================================================-->
<!--===========================================================================
    == SUBFLOOR ==

    $Rev: 113 $
    $Date: 2010-09-03 15:02:57 -0400 (Fri, 03 Sep 2010) $
    Project Home: http://code.google.com/p/subfloor/

    This file contains the default implementation of the ant tasks to 
    perform a build. This file should be included by the build.xml file 
    for your particular project. That build file should redefine any task 
    that is defined in subfloor.xml IF AND ONLY IF the function of the 
    task needs to be customized.

    FORMATTING: 
      ALIGNMENT: indent=2 spaces and wrap lines longer than 120 chars
      NAMING: targets intended for execution by a user are named single-word
              or hyphenated.  Internal targets use '.' notation.

    TO GET STARTED with your project, you will need this file in 
          your project's root directory along with three additional files:
          1. build.xml 
          2. build.properties
          3. ivy_settings.xml
          4. ivy.xml

          Below are some templates:

      === build.xml
    <project name="MyProject" basedir="." default="jar" xmlns:ivy="antlib:org.apache.ivy.ant" >
      <description>
        This build file is used to create the MyProject project and works with the subfloor.xml file.
      </description>
      <import file="subfloor.xml"/>
    </project>

    === build.properties
    project.revision=1.0-SNAPSHOT  #the version of your project.  This will appear in jar META-INF, dist artifact filenames and IVY revision metadata. 
    ivy.artifact.id=my-project   #IVY metadata describing the name of the artifact
    impl.title=My Project #English language version of your project name

============================================================================-->
<project name="subfloor" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
-------------------------------------------------------------------------------
     subfloor.xml provides tasks needed to perform a project build. 
     It is typically not used directly but imported by each project's build.xml
     file.  The build.xml file can override tasks when customization is required. 

MAIN TARGETS
============
  * clean / clean-all : 
    remove all artifacts of the build, clean-all adds the removal
    of any library or jar dependencies downloaded as part of the build

  * resolve :
    download/refresh library or jar dependencies needed for the build (uses Apache IVY)

  * compile :
    run javac on the project's source

  * jar :
    creates a jar file

  * dist :
    creates all project distributables

  * test :
    runs JUnit tests from your project's test source

SPECIAL TARGETS
============
  * publish-local :
    builds a jar for your project and registers it with the local artifact repository isolated 
    to your machine at $HOME/.ivy2/local.  Further executions of the the resolve target by this
    or other projects will find your published jar.

  * ivy-clean* :
    this family of targets helps reset your IVY environment in the event that you are having
    difficulty resolving dependencies

TYPICAL TARGET SEQUENCE
============    
  * clean-all resolve dist :
    a good start to build all project distributables from scratch.  Note that jar dependencies
    will not be downloaded unless you explicitly run the resolve target.  We made the resolution
    and retrieval completely discretionary since there are many situations in which
    you will not want to get or refresh dependencies, e.g. if you are offline with no Internet
    access.  In such case, you could just run "dist" if the set of jars you already have are 
    sufficient.

  </description>
  <!-- Load the properties files in the proper order -->
  <property file="override.properties"
            description="Properties customized for your development environment belong in this file.  This file will never be checked into the SCM." />
  <property file="build.properties"
            description="Properties customized for your particular project belong in this file." />
  <!-- =================================================================================
       Property Defaults
       Any of these properties can be overridden in either build.properties or override.properties
       =================================================================================-->
  <!-- Project meta properties -->
  <property name="impl.vendor" value="Your Company Here" description="Jar file metadata describing the jar's vendor" />
  <property name="impl.productID"
            value=""
            description="Jar file metadata indicating the product ID (this is not the revision)" />
  <!-- Compile properties -->
  <property name="src.dir" value="${basedir}/src" description="Project source code directory" />
  <property name="bin.dir" value="${basedir}/bin" description="Base directory for all non-dist build output" />
  <property name="classes.dir"
            value="${bin.dir}/classes"
            description="Classes compiled from project source code are placed here" />
  <property name="lib.dir"
            value="${basedir}/lib"
            description="Directory that hosts Jar files required to compile project source.  (IVY will populate this directory with required jars)" />
  <property name="devlib.dir"
            value="${basedir}/dev-lib"
            description="Directory for developer to place development Jar files (not affected by clean targets)" />
  <!-- Compiler properties (passed directly to javac ant target) -->
  <property name="javac.debug"
            value="true"
            description="Indicates whether source should be compiled with debug information (passed to javac ant task)." />
  <property name="javac.deprecation"
            value="true"
            description="Indicates whether source should be compiled with deprecation information" />
  <property name="javac.source" value="1.5" description="Provide source compatibility with specified release" />
  <property name="javac.target" value="1.5" description="Generate class files for specific VM version" />
  <property name="javac.maxmemory" value="256M" description="Max memory alloted to java compile" />
  <!-- Third party Ant tasks and tools properties -->
  <property name="subfloor.resources.dir"
            value="${user.home}/.subfloor"
            description="Base dir for runtim
